mtcars[5]
mtcars[,5]
mtcars[5,]
mtcars[1:4,]
source("prog1/complete.R")
complete("specdata", 1)
source("prog1/complete.R")
complete("specdata", 1)
data
data[,2:3]
for (row in data) {}
for (row in data) {
print(row)
]
for (row in data) {
print(row)
}
for (row in data[,2:3]) {
print(row)
}
data[1:,]
data[1,]
data[1:,]
data[1:4,]
for (row in data[row,]) {
print(row)
}
data[1,]
source('compltete.R')
source('complete.R')
source('prog1/complete.R')
complete("specdata", 1)
data_complete
complete("specdata", 1)
source('prog1/complete.R')
complete("specdata", 1)
source('prog1/complete.R')
complete("specdata", 1)
data_complete
source('prog1/complete.R')
data_complete
complete("specdata", 1)
source('prog1/complete.R')
complete("specdata", 1)
source('prog1/complete.R')
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
?cor
data
data <- read.csv('specdata/001.csv')
sulf <- data$sulfate
nit <- data$nitrate
cor(sulf, nit)
source('prog1/corr.R')
corr('specdata')
source('complete.R')
source('prog1/complete.R')
source('complete.R')
source('prog1/corr.R')
corr('specdata')
source('prog1/corr.R')
corr('specdata')
data
data[c(1, 3:5)]
data[c(1, 3:5),]
source('prog1/corr.R')
cr <- corr("specdata", 150)
head(cr)
source('prog1/corr.R')
cr <- corr("specdata", 150)
warnings()
source('prog1/corr.R')
cr <- corr("specdata", 400)
data
data.head()
head(data)
source('prog1/corr.R')
data.head()
cr <- corr("specdata", 400)
source('prog1/corr.R')
cr <- corr("specdata", 400)
source('prog1/corr.R')
cr <- corr("specdata", 400)
head(cr)
warnings()
sulf <- data$sulfate
sulf
nit <- data$nitrate
nit
!is.na(sulf)
is.na(nit)
nitmask <- !is.na(nit)
sulfmask <-!is.na(sulf)
nitmask & sulfmask
source('prog1/corr.R')
cr <- corr("specdata", 400)
head(cr)
cr <- corr("specdata", 150)
head(cr)
cr <- corr("specdata", 5000)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
?runif
x <- matrix(rnorm(200), 20, 10)
rnorm(200)
apply(x, 2, mean)
apply(x, 3, mean)
apply(x, 1, mean)
?quantile
x <- array(rnorm(200), c(2,2,10))
x
1:4
1:4 ==  c(1,2,3,4)
c(1,2,3,4)
rep(1)
rep(4)
rep(4, 16)
?tapply
?gl
gl(5, 1)
gl(5, 2)
traceback()
library(datasets)
data(iris)
?iris
?ls
ls(c(1,2,3))
ls(pattern="O")
ls(pattern="1")
ls(pattern="52")
ls()
iris
colMeans(iris)
mask = (iris$species=='virginica')
mask
mask = iris$species=='virginica'
mask
mask = c(iris$species=='virginica')
mask
tapply(iris$Sepal.Length, iris$Species, mean)
with(mtcars, tapply(mpg, cyl, mean))
d[1]
d = with(mtcars, tapply(mpg, cyl, mean))
d[1]
d[3]
d[1] - d[3]
mtcars
mean(mtcars$mpg, mtcars$cyl)
tapply(mtcars$cyl, mtcars$mpg, mean)
apply(mtcars, 2, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
with(mtcars, tapply(hp, cyl, mean))
d=with(mtcars, tapply(hp, cyl, mean))
d[1]-d[3]
mtcars
apply(iris[, 1:4], 2, mean)
with(iris, tapply(Sepal.Length, species,  mean))
with(iris, tapply(Sepal.Length, Species,  mean))
list(c[1,2,3])
list(a=1, b=2, c=3)
c(list(a=1, b=2, c=3))
list(c('a','b','c'), c(1,2,3))
numeric()
numeric(1)
numeric(1,3)
numeric(8)
matrix(iris)
iris
range(4)
range(6)
range(7)
M = (1:6, 2, 3)
M = (1:6, nrow=2, ncol=3)
1:5
c(1:6)
M = (c(1:6), nrow=2, ncol=3)
M = matrix(1:6, nrow=2, ncol=3)
M
t(M)
i(M)
inverse(M)
solve(M)
M = matrix(1:9)
M
M = matrix(1:9, 3, 3)
M
solve(M)
c = rbind(c(1, -1/4), c(-1/4, 1))
solve(c)
a = c(1,2,3,4)
a
a < 3
a == 4
list(1,2,3,4)
l = list(1,2,3,4)
l == 3
l <
2
l < 6
getwd()
source('ProgrammingAssignment2/cachematrix.R')
source('ProgrammingAssignment2/cachematrix.R')
runif(4)
m = matrix(rnorm(9), 3,3)
m
solve(m)
m %*% solve(m)
mc = makeCacheMatrix(m)
cacheSolve(m)
mc
mc$getinv
mc$getinv()
mc
cacheSolve(mc)
source('ProgrammingAssignment2/cachematrix.R')
m
mc = makeCacheMatrix(m)
cacheSolve(mc)
cacheSolve(mc)
mc.get()
mc$get()
mc$get() %*% cacheSolve(mc)
letters
set.seed(1)
rpois(5,2)
set.seed(10)
x <- rep(0:1, each=5)
e <- rnorm(10, 0, 20)
rnorm(10, 0, 20)
rnorm(10, 0, 20)
rnorm(10, 0, 20)
y <- 0.5 + 2*x + e
y
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
library(data.table)
install.package()
install.packages()
install.packages("swirl", "data.table")
install.packages("swirl")
install.packages("data.table")
library(swirl)
swirl()
GET
library(httr)
GET("https://api.github.com/users/jtleek/repos")
library(jsonlite)
?content
resp
cont <- content(GET("https://api.github.com/users/jtleek/repos"))
cont
jsonData <- fromJSON("https://api.github.com/users/jtleek/repos")
?fromJSON
jsonData
jsonData$id
names(jsonData)
jsonData$name == "datasharing"
jsonData[jsonData$name == "datasharing"]
jsonData[, jsonData$name == "datasharing"]
jsonData[, "name"]
jsonData$name
jsonData$name == jsonData[, "name"]
jsonData$name == "datasharing"
jsonData[jsonData$name == "datasharing"]
jsonData[, jsonData$name == "datasharing"]
jsonData[jsonData$name == "datasharing" , ]
d <- jsonData[jsonData$name == "datasharing" , ]
View(d)
View(d)
d$created_at
page = content(GET("http://biostat.jhsph.edu/~jleek/contact.html "))
page = content(GET("http://biostat.jhsph.edu/~jleek/contact.html"))
page <- content(GET("http://biostat.jhsph.edu/~jleek/contact.html"))
page
page[1]
class(page)
nchar(page)
?text
?string
?char
?cha
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
con
readlines(con)
readLines(con)
lns
lns <- readLines(con)
nchar(lns[10])
nchar(lns[10]); nchar(lns[20]); nchar(lns[30]); nchar(lns[100]);
libary(data.table)
library(data.table)
fread("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for")
fread("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
nchar(lns[10]); nchar(lns[20]); nchar(lns[30]); nchar(lns[100]);
fread("~/Downloads/getdata-wksst8110.for")
fread("~/Downloads/getdata-wksst8110.for", sep="\t")
fread("~/Downloads/getdata-wksst8110.for", sep="\t", skip=2)
fread("~/Downloads/getdata-wksst8110.for", sep="\t", skip=1)
?fread
fread("~/Downloads/getdata-wksst8110.for", sep="\t", skip=1)[1]
fread("~/Downloads/getdata-wksst8110.for", sep="\t", sep2="-"skip=1)[1]
fread("~/Downloads/getdata-wksst8110.for", sep="\t", sep2="-" skip=1)[1]
fread("~/Downloads/getdata-wksst8110.for", sep="\t", sep2="-" skip=1)
fread("~/Downloads/getdata-wksst8110.for", sep="\t", sep2="sdf" skip=1)
fread("~/Downloads/getdata-wksst8110.for", sep="\t", sep2="0", skip=1)
fread("~/Downloads/getdata-wksst8110.for", sep="\t", sep2="-", skip=1)
fread("~/Downloads/getdata-wksst8110.for", sep="\t", sep2="-", skip=1)[5]
fread("~/Downloads/getdata-wksst8110.for", sep="\t", sep2="-", skip=1, autostart=10)[20]
fread("~/Downloads/getdata-wksst8110.for", sep="\t", sep2="-", skip=1, autostart=10)[20][4]
fread("~/Downloads/getdata-wksst8110.for", sep="\t", sep2="-", skip=1, autostart=10)[20][5]
fread("~/Downloads/getdata-wksst8110.for", sep="\t", sep2="-", skip=1, autostart=10)[20][6]
fread("~/Downloads/getdata-wksst8110.for", sep="\t", sep2="-", skip=1, autostart=10)[20][1]
fread("~/Downloads/getdata-wksst8110.for", sep="\t", sep2="-", skip=1, autostart=10)[20][2]
fread("~/Downloads/getdata-wksst8110.for", sep="\t", sep2="-", skip=1, autostart=10)[20][1]
fread("~/Downloads/getdata-wksst8110.for", sep="\t", sep2="-", skip=1, autostart=10)[20][1][1]
fread("~/Downloads/getdata-wksst8110.for", sep="\t", sep2="-", skip=1, autostart=10)[20][1][1][1]
class(fread("~/Downloads/getdata-wksst8110.for", sep="\t", sep2="-", skip=1, autostart=10)[20])
attempt <- fread("~/Downloads/getdata-wksst8110.for", sep="\t", sep2="-", skip=1, autostart=10)[20]
attempt
attempt <- fread("~/Downloads/getdata-wksst8110.for", sep="\2", sep2="-", skip=1, autostart=10)[20]
attempt <- fread("~/Downloads/getdata-wksst8110.for", sep="\w", sep2="-", skip=1, autostart=10)[20]
attempt <- fread("~/Downloads/getdata-wksst8110.for", sep2="-", skip=1, autostart=10)[20]
attempt <- fread("~/Downloads/getdata-wksst8110.for", sep="", sep2="-", skip=1, autostart=10)[20]
attempt <- read.csv("~/Downloads/getdata-wksst8110.for", sep="", sep2="-", skip=1, autostart=10)[20]
?read.csv
?read.fwf
read.fwf("~/Downloads/getdata-wksst8110.for")
read.fwf("~/Downloads/getdata-wksst8110.for", width=c(4, 4, 4, 4))
?input
data
d
d <- read.fwf("~/Downloads/getdata-wksst8110.for", width=c(4, 4, 4, 4))
d <- read.fwf("~/Downloads/getdata-wksst8110.for", width=c(4, 4, 4, 4), skip=3)
d <- read.fwf("~/Downloads/getdata-wksst8110.for", width=c(10, 4, 4, 4), skip=4)
d <- read.fwf("~/Downloads/getdata-wksst8110.for", width=c(10, -1, 4, 4), skip=4)
d <- read.fwf("~/Downloads/getdata-wksst8110.for", width=c(10, 4, 3, 4), skip=4)
d <- read.fwf("~/Downloads/getdata-wksst8110.for", width=c(2,-1,2,-1,2,-1,2,-1,2,-1,3), skip=4)
d <- read.fwf("~/Downloads/getdata-wksst8110.for", width=c(10, 4, 3, 4), skip=4)
d <- read.fwf("~/Downloads/getdata-wksst8110.for", width=c(10, -5, 3, 4), skip=4)
d <- read.fwf("~/Downloads/getdata-wksst8110.for", width=c(10, -5, 4, 4), skip=4)
d <- read.fwf("~/Downloads/getdata-wksst8110.for", width=c(10, -5, 4, 4), skip=4, sep='-')
d <- read.fwf("~/Downloads/getdata-wksst8110.for", width=c(10, -5, -1, 4), skip=4)
d <- read.fwf("~/Downloads/getdata-wksst8110.for", width=c(10, -5, 4, -1, 3), skip=4)
d <- read.fwf("~/Downloads/getdata-wksst8110.for", width=c(10, -5, 4, -1, 3, -5, 4, -1, 3, -5, 4, -1, 3, -5, 4, -1, 3), skip=4)
sum(d$V9)
sum(d$V4)
d <- fread("~/Downloads/getdata-wksst8110.for", skip=4)
d <- fread("~/Downloads/getdata-wksst8110.for", skip=4, sep2='-')
d <- fread("~/Downloads/getdata-wksst8110.for", skip=4, sep="     ")
d <- fread("~/Downloads/getdata-wksst8110.for", skip=4, sep=" ")
?'~'
?transform
library(lattice)
?transform
?transform
library(datasets)
a
airquality
factor(airquality$Month)
airquality$Month
xyplot(Ozone ~ Wind | Month, data = airquality, layout = c(5, 1))
af
aq <- transform(airquality, Month = factor(Month))
aq
xyplot(Ozone ~ Wind | Month, data = aq, layout = c(5, 1))
library(ggplot2)
install.packages("ggplot2")
?aed
?aes
library(ggplot2)
?aes
?qplot
q
e
dp
p
p <- xyplot()
?xyplot
p <- xyplot(rnorm(100))
rnorm(100)
p <- xyplot(rnorm(100), rnorm(100))
p <- xyplot(rnorm(100) ~ rnorm(100))
p
class(p)
library(nlme)
xyplot(weight ~ Time | Diet, Bodyweight)
xyplot(weight ~ Time | Diet, BodyWeight)
Diet
BodyWeight
?axis
?points
?panel.lmline
?lines
?panel.lmline
?axis
?points
?lines
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
?trellis.par.set
?splom
?par
?print.trellis
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month
))
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
data("airquality")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
View(airquality)
class(airquality$Month)
?geom
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
?stats_smooth
?qplot
?lpoints
?text
?geom_smooth
?read.table
?read.frame
install.packages("sqldf")
library(sqldf)
sample(1:5)
?which
?order(c(4, 2, 1))
order(c(4, 2, 1))
sort.list(c(4, 2, 1))
l
l = 4
l
l = c(4, 2, 1)
l[order(l)]
sort(l)
l
library(plyr)
?str
?plot
a
a = as.numeric(c(1))
a
type(a)
class(a)
memory.size(a)
object.size(a)
a = as.numeric(c(1, 2))
object.size(a)
a = c(1, 2, 3, 4, 5, 6, 7)
a[1]
a[a > 4]
b = rep(c(10), times=7)
b
a[a < 4] = b
a[a < 4] = b[a < 4]
a
user.data <- fread("data_sample/user_data_sample.csv", na.strings = c("unknown", ""))
end.song.data <- fread("data_sample/end_song_sample.csv", na.strings = c("unknown", ""))
library(data.table)
library(ggplot2)
user.data <- fread("data_sample/user_data_sample.csv", na.strings = c("unknown", ""))
end.song.data <- fread("data_sample/end_song_sample.csv", na.strings = c("unknown", ""))
setwd("~/Desktop/Spotify Assessment/")
user.data <- fread("data_sample/user_data_sample.csv", na.strings = c("unknown", ""))
end.song.data <- fread("data_sample/end_song_sample.csv", na.strings = c("unknown", ""))
View(end.song.data)
total.time.spent.listening <- end.song.data[, list(time_played_ms = sum(ms_played)), by = user_id]
str(total.time.spent.listening)
qplot(time_played_ms, data = total.time.spent.listening, geom = "histogram", facets = (gender ~ .),
bins = 30)
total.time.spent.listening <- end.song.data[, list(time_played_ms = sum(ms_played)), by = user_id]
total.time.spent.listening <- merge(x = total.time.spent.listening, y = user.data[, list(gender, user_id)], by = "user_id", all.x = TRUE)  # acts as left join
# clear any rows with missing values
total.time.spent.listening <- total.time.spent.listening[complete.cases(total.time.spent.listening), ]
qplot(time_played_ms, data = total.time.spent.listening, geom = "histogram", facets = (gender ~ .),
bins = 30)
?count
sum(c(T, F, T))
?percentage
mean(total.time.spent.listening$time_played_ms[total.time.spent.listening$gender == "male"])
mean(total.time.spent.listening$time_played_ms[total.time.spent.listening$gender == "female"])
2000 / (2000 + 1750)
nrow(end.song.data)
setwd("~/Desktop/Spotify Assessment/")
library(data.table)
library(zoo, warn.conflicts = FALSE)
library(ggplot2)
user.data <- fread("data_sample/user_data_sample.csv", na.strings = c("unknown", ""))
end.song.data <- fread("data_sample/end_song_sample.csv", na.strings = c("unknown", ""))
# end.song.data$user_id = as.factor(end.song.data$user_id)
# end.song.data$context = as.factor(end.song.data$context)
# end.song.data$product = as.factor(end.song.data$product)
# user.data <- mutate(user.data, gender = factor(gender), age_range = factor(age_range), country = factor(country))
num.listens <- nrow(end.song.data)
